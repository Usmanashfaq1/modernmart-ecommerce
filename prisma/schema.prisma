generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELED
}

model User {
  id        String   @id @db.Uuid      // SUPABASE USER ID
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())

  orders    Order[]
  cart      Cart?
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  slug        String     @unique
  description String
  price       Float
  stock       Int
  images      String[]   // Array of image URLs
  createdAt   DateTime   @default(now())

  orderItems  OrderItem[]
  cartItems   CartItem[]
}

model Order {
  id              Int         @id @default(autoincrement())
  userId          String      @db.Uuid
  status          OrderStatus @default(PENDING)
  total           Float
  shippingAddress String
  createdAt       DateTime    @default(now())

  user      User       @relation(fields: [userId], references: [id])
  items     OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float   // Price at time of order

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        Int       @id @default(autoincrement())
  userId    String    @unique @db.Uuid
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  items     CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int     @default(1)

  cart     Cart     @relation(fields: [cartId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])
}